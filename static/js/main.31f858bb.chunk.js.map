{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setUserId","setTitle","newTodos","setTodos","userError","setUserError","titleError","setTitleError","onSubmit","event","preventDefault","userObj","newTodo","length","prevTodos","htmlFor","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31f858bb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype UserInfoProps = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoInfoProps = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => (\n  <article className={`TodoInfo\n     ${todo.completed ? 'TodoInfo--completed' : ''}`}\n  >\n\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.title}\n      />\n    ))}\n  </section>\n);\n","import React, { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState<number>(0);\n  const [title, setTitle] = useState<string>('');\n  const [newTodos, setTodos] = useState<Todo[]>(todos);\n  const [userError, setUserError] = useState<string | null>(null);\n  const [titleError, setTitleError] = useState<string | null>(null);\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    // was title described?\n    if (!title) {\n      setTitleError('Please enter a title');\n\n      return;\n    }\n\n    // was user selected?\n    if (!userId) {\n      setUserError('Please choose a user');\n\n      return;\n    }\n\n    const userObj = usersFromServer.find(user => user.id === userId);\n\n    if (userObj) {\n      const newTodo: Todo = {\n        id: todos.length + 1,\n        title,\n        userId: userObj?.id || 1,\n        completed: false,\n        user: ((userObj) ? getUser(userObj.id) : null),\n      };\n\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n\n      setTitle('');\n      setUserId(0);\n      setUserError(null);\n      setTitleError(null);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Static list of todos</h1>\n      {/* 1.dodaje form  */}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(null);\n            }}\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n        <div>\n          <label htmlFor=\"user\">User:</label>\n          <select\n            id=\"user\"\n            name=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setUserError(null);\n            }}\n\n          >\n            <option value={0}>Choose a user</option>\n\n            {usersFromServer.map((user) => (\n              <option key={title + user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n        <button type=\"submit\">Add</button>\n      </form>\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}